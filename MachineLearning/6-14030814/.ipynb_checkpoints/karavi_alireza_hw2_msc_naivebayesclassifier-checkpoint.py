# -*- coding: utf-8 -*-
"""Karavi-Alireza-HW2-MSc-NaiveBayesClassifier.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10Q-F2z0HRVOHUcu6is6vanUVDpf46MnL
"""

# مرحله 1: لود کردن کتابخانه‌ها
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import accuracy_score

# مرحله 2: بارگذاری دیتاست
# اگر دیتاست در Google Drive است، ابتدا Google Drive را متصل کنید
from google.colab import drive
drive.mount('/content/gdrive')

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/gdrive/MyDrive/SourceKaravi/NTK.Education.Practice/
!git pull
# %cd /content/gdrive/MyDrive/SourceKaravi/NTK.Education.Practice/MachineLearning/Practice3

# بارگذاری دیتاست (توجه: آدرس فایل خود را وارد کنید)
df = pd.read_csv('/content/gdrive/MyDrive/SourceKaravi/NTK.Education.Practice/MachineLearning/Practice3/Dissertation_grades_information.csv')

# مرحله 3: بررسی فیلدهای دیتاست
print(df.head())  # نمایش 5 ردیف اول دیتاست
print(df.info())  # اطلاعات کلی درباره دیتاست

# تبدیل ستون به نوع int
df['gender'] = df['gender'].map({'M': 1, 'F': 0})
df['gender'] = df['gender'].astype(int)
# تبدیل ستون به نوع int
df['score'] = df['score'].map({'D': 0, 'C': 1, 'B': 2, 'A': 3})
df['score'] = df['score'].astype(int)

# مرحله 3: بررسی فیلدهای دیتاست
print(df.head())  # نمایش 5 ردیف اول دیتاست
print(df.info())  # اطلاعات کلی درباره دیتاست

# مرحله 4: آماده‌سازی داده‌ها
X = df.drop('score', axis=1)
y = df['score']

# تقسیم داده‌ها به مجموعه آموزش و تست
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# مرحله 5: اجرای Naive Bayes Classifier
model = GaussianNB()
model.fit(X_train, y_train)

# پیش‌بینی با استفاده از مجموعه تست
y_pred = model.predict(X_test)

# مرحله 6: ارزیابی مدل
accuracy = accuracy_score(y_test, y_pred)
print(f'Accuracy: {accuracy * 100:.2f}%')