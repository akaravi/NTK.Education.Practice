# -*- coding: utf-8 -*-
"""evolutionary_computing_photo_watermarking.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OxmKsQb2lEL6BmDh5YsaWrIA4_d8mbwC
"""

from PIL import Image
import numpy as np
from google.colab import files

def encode_image():
    # آپلود عکس از طریق Colab
    uploaded = files.upload()
    if not uploaded:
        print("هیچ فایلی آپلود نشده است!")
        return

    # بارگذاری عکس
    try:
        image_path = next(iter(uploaded.keys()))
        img = Image.open(image_path)
    except:
        print("خطا در بارگذاری عکس!")
        return

    # تبدیل عکس به آرایه numpy با dtype=int16 برای جلوگیری از Overflow
    img_array = np.array(img, dtype=np.int16)

    # دریافت متن از کاربر
    text = input("لطفاً متن خود را وارد کنید: ")

    # تبدیل متن به دویی
    binary_text = ''.join(format(ord(c), '08b') for c in text)

    # بررسی سیاست فضای کافی در عکس برای نگارش متن
    if img_array.size < len(binary_text):
        print("متن شما برای این عکس بزرگ است!")
        return

    # پیمایش پیکسلها و نگارش متن در آنها
    index = 0
    for i in range(img_array.shape[0]):
        for j in range(img_array.shape[1]):
            for k in range(3):  # برای هر رنگ (R, G, B)
                if index < len(binary_text):
                    # تغییر بیت اول به بیت متن
                    img_array[i][j][k] = ((img_array[i][j][k] & ~1) | int(binary_text[index]))
                    index += 1

    # بازگرداندن dtype به uint8
    img_array = img_array.astype(np.uint8)

    # ذخیره عکس پیشproses شده در Colab
    encoded_image_path = "encoded_image.png"  # نام فایل خروجی
    new_img = Image.fromarray(img_array)
    new_img.save(encoded_image_path)

    print(f"متن با موفقیت در عکس نگارش شد و در فایل {encoded_image_path} ذخیره شد.")

    # دانلود فایل
    files.download(encoded_image_path)

def decode_image():
    # آپلود عکس از طریق Colab
    uploaded = files.upload()
    if not uploaded:
        print("هیچ فایلی آپلود نشده است!")
        return

    # بارگذاری عکس
    try:
        image_path = next(iter(uploaded.keys()))
        img = Image.open(image_path)
    except:
        print("خطا در بارگذاری عکس!")
        return

    # تبدیل عکس به آرایه numpy
    img_array = np.array(img)

    # استخراج متن از عکس
    binary_text = []
    for i in range(img_array.shape[0]):
        for j in range(img_array.shape[1]):
            for k in range(3):  # برای هر رنگ (R, G, B)
                # استخراج بیت اول
                binary_text.append(str(img_array[i][j][k] & 1))

    # تبدیل متن به رشته
    binary_str = ''.join(binary_text)
    text_length = len(binary_str) // 8
    decoded_text = ''.join([chr(int(binary_str[i*8:(i+1)*8], 2)) for i in range(text_length)])

    print("متن استخراج شده:")
    print(decoded_text)

# اجرای برنامه
print("لطفاً اول کار نگارش متن را انجام دهید و سپس استخراج متن از عکس.")
print("1. نگارش متن در عکس")
print("2. استخراج متن از عکس")
choice = input("لطفاً گزینه خود را انتخاب کنید (1 یا 2): ")

if choice == '1':
    encode_image()
elif choice == '2':
    decode_image()
else:
    print("گزینه نامعتبر.")